services:
  pgsql:
    image: "docker.io/library/postgres:17.4"
    environment:
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "${PGSQL_PASSWORD}"
    ports:
      - "8000:5432"
    volumes:
      - type: "volume"
        target: "/var/lib/postgresql/data"
        source: "todo-mydb"
        read_only: false
    networks:
      - "aspire"
  redis:
    image: "docker.io/library/redis:7.4"
    command:
      - "-c"
      - "redis-server --requirepass $$REDIS_PASSWORD --save 60 1"
    entrypoint:
      - "/bin/sh"
    environment:
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
    ports:
      - "8001:6379"
    volumes:
      - type: "volume"
        target: "/data"
        source: "todo-redis"
        read_only: false
    networks:
      - "aspire"
  aspiredbandcache-api:
    image: "${ASPIREDBANDCACHE_API_IMAGE}"
    environment:
      OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES: "true"
      OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES: "true"
      OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY: "in_memory"
      ASPNETCORE_FORWARDEDHEADERS_ENABLED: "true"
      HTTP_PORTS: "8002"
      ConnectionStrings__mydb: "Host=pgsql;Port=5432;Username=postgres;Password=${PGSQL_PASSWORD};Database=mydb"
      ConnectionStrings__redis: "redis:6379,password=${REDIS_PASSWORD}"
    ports:
      - "8003:8002"
    depends_on:
      pgsql:
        condition: "service_started"
      redis:
        condition: "service_started"
    networks:
      - "aspire"
networks:
  aspire:
    driver: "bridge"
volumes:
  todo-mydb:
    driver: "local"
  todo-redis:
    driver: "local"
